from flask import Flask, render_template, request, redirect, url_for
from dropbox import Dropbox
from flask_dropbox import Dropbox as FlaskDropbox
from werkzeug.utils import secure_filename  # Import for secure file naming

app = Flask(__name)

# Configure Dropbox API credentials
app.config['DROPBOX_APP_KEY'] = 'YOUR_APP_KEY'
app.config['DROPBOX_APP_SECRET'] = 'YOUR_APP_SECRET'
app.config['DROPBOX_ACCESS_TOKEN'] = 'YOUR_ACCESS_TOKEN'

# Initialize the Flask-Dropbox extension
flask_dropbox = FlaskDropbox(app)

# Define a route to render the main page
@app.route('/')
def index():
    # Fetch photos from Dropbox (you need to implement this function)
    photos = fetch_photos_from_dropbox()
    return render_template('main.html', photos=photos)

# Define a route to handle file upload
@app.route('/upload', methods=['POST'])
def upload():
    if 'photo' in request.files:
        photo = request.files['photo']
        if photo.filename != '':
            # Ensure a secure filename and save the uploaded photo to Dropbox
            filename = secure_filename(photo.filename)
            upload_photo_to_dropbox(photo, filename)
    return redirect(url_for('index'))

# Implement function to fetch photos from Dropbox
def fetch_photos_from_dropbox():
    # Use the Dropbox API to fetch photos from a specific folder
    photos = []
    for entry in flask_dropbox.client.files_list_folder('/photos').entries:
        if isinstance(entry, flask_dropbox.client.files.FileMetadata) and entry.name.endswith('.jpg'):
            photo_url = flask_dropbox.client.files_get_temporary_link(entry.path_display).link
            photos.append(photo_url)
    return photos

# Implement function to upload a photo to Dropbox
def upload_photo_to_dropbox(photo, filename):
    # Save the uploaded photo to a specific folder in Dropbox
    with flask_dropbox.client.files_upload(photo.read(), f'/photos/{filename}', mute=True):
        pass

if __name__ == '__main__':
    app.run(debug=True)
    # ... (Previous code)

# Define a route to handle file upload
@app.route('/upload', methods=['POST'])
def upload():
    if 'photo' in request.files:
        photo = request.files['photo']
        if photo.filename != '':
            filename = secure_filename(photo.filename)
            upload_photo_to_dropbox(photo, filename)
    return redirect(url_for('index'))

# Define a route to process actions
@app.route('/process_action', methods=['POST'])
def process_action():
    action = request.json.get('action')
    if action == 'Gresit':
        move_photos_to_wrong_folder()
    elif action == 'Corect':
        move_photos_to_correct_folder()
    else:
        return 'Invalid action', 400
    return 'Action processed', 200

def move_photos_to_wrong_folder():
    # Implement logic to move photos to the "wrong" folder on Dropbox
    # You can use the Dropbox API for this.

def move_photos_to_correct_folder():
    # Implement logic to move photos to the "correct" folder on Dropbox
    # You can use the Dropbox API for this.

if __name__ == '__main__':
    app.run(debug=True)

